plugins {
  // To create a fat jar build/libs/bcel-util-all.jar, run: ./gradlew shadowJar
  id "com.github.johnrengelman.shadow" version "2.0.3"
  // Code formatting with Google Java Format; use targets "goJF" and "verJF"
  id "com.github.sherter.google-java-format" version "0.7.1"
  // To show task list as a tree, run: ./gradlew <taskname> taskTree
  id "com.dorongold.task-tree" version "1.3"
}

apply plugin: 'java-library'

// Checker Framework pluggable type-checking
apply from: "${buildscript.sourceFile.parent}/gradle/checkerframework-annos-in-comments.gradle"
// To upload to Maven Central, run:  ./gradlew uploadArchives
apply from: "${buildscript.sourceFile.parent}/gradle/mavencentral.gradle"

dependencies {
  api group: 'org.checkerframework.annotatedlib', name: 'bcel', version: '0.0.6'

  testImplementation 'junit:junit:4.12'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

// Turn Javadoc warnings into errors.
javadoc {
  options.addStringOption('Xmaxwarns', '10000')
  options.addStringOption('Xwerror', '-quiet')
}

task javadocWeb(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = file("/cse/web/research/plumelib/bcel-util/api")
  classpath = project.sourceSets.main.compileClasspath
}

task installGitHooks(type: Copy) {
  description 'Copies git hooks to .git directory'
  from 'githooks'
  into '.git/hooks'
}

task compileAll() {
  dependsOn compileJava
  dependsOn compileTestJava
}

tasks.withType(JavaCompile) {
  dependsOn(':installGitHooks')
}
